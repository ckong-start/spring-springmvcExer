<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>atcrowdfunding-main</artifactId>
	<name>atcrowdfunding-main</name>
	<description>众筹后台系统web模块，管理员访问的入口</description>
	<parent>
		<groupId>com.atcrowdfunding</groupId>
		<artifactId>atcrowdfunding-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../atcrowdfunding-parent/pom.xml</relativePath>
	</parent>
	<dependencies>

		<dependency>
			<groupId>com.atcrowdfunding</groupId>
			<artifactId>atcrowdfunding-manager-impl</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
		</dependency>

		<!-- 依赖的WEB类库 -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<!-- 目标环境已经有了 -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		
		<!-- 引入druid+mysql驱动 -->
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		
		<!-- 引入mybatis-generator的依赖 -->
		<!-- MBG -->
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
		</dependency>

		<!-- junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 引入Spring的单元测试模块 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 引入log4j日志框架 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- 以后开发项目时统一日志框架 1、引入slf4j和他的一个实现[一般使用 logback] 2、为了防止其他的框架使用了其他jar包 
			先排除其他的所有的jar包 使用slf4j提供的转换包替换他们 -->
		<!-- 由于spring和commons-logging耦合 ，缺少jcl运行报错 可以引入 slf4j提供的jcl的转换包：转换包中提供了和jcl一样的包和类以及类的方法，但是具体输出日志时使用的是slf4j的api输出的 
			org.apache.commons.logging.Log -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId><!-- 替换commons-logging -->
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId><!-- 替换java.util.logging -->
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId><!-- 间接依赖logback-core --><!-- 优秀的日志实现 -->
		</dependency>
		<!-- slf4j（门面）: Simple Logging Facade for Java ：简单日志门面（接口）（类似JDBC）； log4j：日志实现（类似数据库驱动）； 
			log4j2（实现）, logback（实现）, 后来我们用slf4j+logback（最稳定的方案）; -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId><!-- 抽象层，接口 -->
		</dependency>
	</dependencies>
		
		<!-- 引入逆向工程的插件： 有了插件可以通过mvn的命令执行逆向工程 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.7</version>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.42</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
	<packaging>war</packaging>
</project>