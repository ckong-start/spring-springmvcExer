<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
<!-- 
		NamedParameterJdbcTemplate配置用来执行带有具名参数的sql语句的工具类
	 -->
	<bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" id="namedParameterJdbcTemplate">
		<constructor-arg index="0" ref="dataSource"/>
	</bean>
	<!-- 引入单独的jdbc.properties配置文件 
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"/>
	</bean>
	-->
	<context:component-scan base-package="exer1"></context:component-scan> 
	
	<!-- 使用Spring IOC 容器管理数据库连接池 -->
	<bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
		<property name="username" value="${user}"/>
		<property name="password" value="${password}"/>
		<property name="url" value="${url}"/>
		<property name="driverClassName" value="${driverClassName}"/>
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
	</bean>
	<context:component-scan base-package="exer"></context:component-scan> 
	
	<!-- 使用context名称空间加载jdbc.properties配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- jdbcTemplate -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<!-- 
			事务管理器中的连接池对象，必须和访问数据库的连接池对象是同一个
		 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 配置注解的事务管理
		包含AOP代理
		transaction-manager属性配置事务管理器对象 
		如果事务管理器的id值刚好是transactionManager
		则此属性可以省略不配置
	 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
